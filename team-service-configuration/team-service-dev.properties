spring.datasource.url=jdbc:h2:file:~/H2_data/teams;AUTO_SERVER=true
spring.datasource.username=test
spring.datasource.password=test
spring.datasource.driver-class-name=org.h2.Driver
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
spring.h2.console.enabled=true
spring.h2.console.settings.web-allow-others=true
axon.axonserver.servers=${axonserver:localhost}

server.error.include-message=always
server.error.include-binding-errors=always

axon.eventhandling.processors.team-group.mode=subscribing

logging.level.org.axonframework.axonserver.connector.event.axon.AxonServerEventStore=DEBUG



## default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5
management.endpoints.web.exposure.include=*
management.endpoints.enabled-by-default=true

## connect to eureka discovery server
eureka.client.registerWithEureka = true
eureka.client.fetchRegistry = true
eureka.instance.instance-id=${spring.application.name}:${instanceId:${random.value}}
# eureka.client.service-url.defaultZone=http://localhost:7070/eureka
eureka.client.service-url.defaultZone = http://${EUREKASERVER:localhost}:7070/eureka/

## connect to redis configuration using config service
# this will need when team service working from docker 
# redis.server = ${REDISSERVER}localhost
redis.server = localhost
redis.port = 6379

## connect to zipkin
# this will need when team service working from docker 
# spring.zipkin.baseUrl=http://${ZIPKIN:localhost}:9411
spring.zipkin.baseUrl=http://localhost:9411
spring.sleuth.sampler.percentage= 1